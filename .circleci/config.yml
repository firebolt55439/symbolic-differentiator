# # Javascript Node CircleCI 2.0 configuration file
# #
# # Check https://circleci.com/docs/2.0/language-javascript/ for more details
# #
# version: 2
# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       - image: circleci/node:7.10
      
#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/mongo:3.4.4

#     working_directory: ~/repo

#     steps:
#       - checkout

#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#           - v1-dependencies-{{ checksum "package.json" }}
#           # fallback to using the latest cache if no exact match is found
#           - v1-dependencies-

#       - run: yarn install

#       - save_cache:
#           paths:
#             - node_modules
#           key: v1-dependencies-{{ checksum "package.json" }}
        
#       # run tests!
#       - run: yarn test

version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/site # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:6.10.3 # ...with this image as the primary container; this is where all `steps` will run
      # - image: mongo:3.4.4 # and this image as the secondary service container
    steps: # a collection of executable commands 
      - checkout # special step to check out source code to working directory
      # - run:
      #     name: update-npm 
      #     command: 'sudo npm install -g npm@latest'
      - run:
          name: update-npm 
          command: 'sudo npm install -g firebase-tools'
      - restore_cache: # special step to restore the dependency cache 
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: install-npm-wee
          command: npm install
      - run: # run tests
          name: test
          command: echo 1 # npm test
      - run:
          name: build-site
          command: bundle exec jekyll build --verbose
      - run:
          name: deploy-site
          command: firebase deploy --token=$FIREBASE_TOKEN --non-interactive
      # - run: # run coverage report
      #     name: code-coverage
      #     command: './node_modules/.bin/nyc report --reporter=text-lcov'
      # - store_artifacts: # special step to save test results as as artifact
      #     path: test-results.xml
      #     prefix: tests
      # - store_artifacts:
      #     path: coverage
      #     prefix: coverage
      # - store_test_results: # special step to upload test results for display in Test Summary
      #     path: test-results.xml
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples    

# machine:
#   node:
#     version: 6.10.3

# # Need to install firebase-tools so that the deploy works
# dependencies:
#   pre:
#     - npm install -g firebase-tools

# # Need to tell Circle CI how to build the site
# compile:
#   override:
#     - bundle exec jekyll build --verbose

# # Circle CI expects some kind of testing to pass in order for the
# # build to be successful and deploy. Since you don't have tests
# # you can fake it by just returning true. http://gph.is/1MLPDWK
# test:
#   override:
#     - "true"

# # How you tell Circle to deploy to Firebase. The important thing to
# # note here is the FIREBASE_TOKEN env variable. See below.
# deployment:
#   production:
#     branch: master
#     commands:
#       - firebase deploy --token=$FIREBASE_TOKEN --non-interactive


