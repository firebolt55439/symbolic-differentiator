defaults: &defaults
  working_directory: ~/repo

version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    <<: *defaults
    docker: # run the steps with Docker
      - image: circleci/ruby:2.5
    environment:
      BUNDLE_PATH: ~/repo/vendor/bundle
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - restore_cache:
          keys:
            - rubygems-v1-{{ checksum "Gemfile.lock" }}
            - rubygems-v1-fallback
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache:
          key: rubygems-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Jekyll Build
          command: bundle exec jekyll build --verbose
      - persist_to_workspace:
          root: ./
          paths:
            - .firebaserc
            - firebase.json
            - node_modules
            - _site
  deploy:
    <<: *defaults
    docker:
      - image: circleci/node:9.4.0
    steps:
      - attach_workspace:
          at: ./
      # - run:
      #     name: Update NPM
      #     command: 'sudo npm install -g npm@latest'
      # - run:
      #     name: Install Firebase Tools
      #     command: 'sudo npm install -g firebase-tools'
      - run:
          name: Deploy Site
          command: ./node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN --non-interactive

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: deploy
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: deploy

# machine:
#   node:
#     version: 6.10.3

# # Need to install firebase-tools so that the deploy works
# dependencies:
#   pre:
#     - npm install -g firebase-tools

# # Need to tell Circle CI how to build the site
# compile:
#   override:
#     - bundle exec jekyll build --verbose

# # Circle CI expects some kind of testing to pass in order for the
# # build to be successful and deploy. Since you don't have tests
# # you can fake it by just returning true. http://gph.is/1MLPDWK
# test:
#   override:
#     - "true"

# # How you tell Circle to deploy to Firebase. The important thing to
# # note here is the FIREBASE_TOKEN env variable. See below.
# deployment:
#   production:
#     branch: master
#     commands:
#       - firebase deploy --token=$FIREBASE_TOKEN --non-interactive


